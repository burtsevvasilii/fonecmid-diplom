#Область ОбработчикиСобытий
//@skip-check module-accessibility-at-client
Процедура ОбработкаПроведения(Отказ,Режим)
	
	// регистр ВКМ_ВыполненныеКлиентуРаботы
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ДоговорыКонтрагентов.ВидДоговора,
	|	ДоговорыКонтрагентов.ВКМ_НачалоДействияДоговора,
	|	ДоговорыКонтрагентов.ВКМ_КонецДействияДоговора,
	|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка = &Договор
	|	И &Дата МЕЖДУ ДоговорыКонтрагентов.ВКМ_НачалоДействияДоговора И ДоговорыКонтрагентов.ВКМ_КонецДействияДоговора";
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Дата", Дата);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Дата документа не соответствует периоду действия договора.";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл	
		Если Выборка.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Вид договора с клиентом не является абонентским облуживанием";
			Сообщение.Сообщить();
			Отказ = Истина; 
		Иначе
			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
			Движение.Период = Дата;
			Движение.Клиент = Клиент;
			Движение.Договор = Договор;
			Движение.КоличествоЧасов = ВыполненныеРаботы.Итог("ЧасыКОплатеКлиенту");
			Движение.СуммаКОплате = Движение.КоличествоЧасов * Выборка.ВКМ_СтоимостьЧасаРаботы;
		КонецЕсли;
	КонецЦикла;
	
	
			
КонецПроцедуры

//@skip-check module-accessibility-at-client
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
			
	
	
КонецПроцедуры 

//@skip-check module-accessibility-at-client
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)	
	
	
	
	
КонецПроцедуры

#КонецОбласти