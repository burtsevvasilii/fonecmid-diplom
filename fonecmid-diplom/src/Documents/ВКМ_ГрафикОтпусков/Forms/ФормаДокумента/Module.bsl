#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	    ЭлементОформления.Использование = Истина;
	    ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона",  WebЦвета.Красный);
	    
	    ЭлементУсловия = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	    ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОтпускаСотрудников.Более28Дней");
	    ЭлементУсловия.ПравоеЗначение = Истина; 
	    ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	    ЭлементУсловия.Использование = Истина;
	    
	    ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить();
	    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ОтпускаСотрудников");
КонецПроцедуры

#КонецОбласти
#Область ОбработчикиСобытийЭлементовТаблицыФормыОтпускаСотрудников
&НаКлиенте
Процедура ОтпускаСотрудниковДатаНачалаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ОтпускаСотрудников.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.ДатаОкончания) Тогда
		ТекущиеДанные.ДнейОтпуска = (ТекущиеДанные.ДатаОкончания - ТекущиеДанные.ДатаНачала)/86400;
	КонецЕсли;
    ПроверкаОформления();
КонецПроцедуры

&НаКлиенте
Процедура ОтпускаСотрудниковДатаОкончанияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОтпускаСотрудников.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.ДатаНачала) Тогда
		ТекущиеДанные.ДнейОтпуска = (ТекущиеДанные.ДатаОкончания - ТекущиеДанные.ДатаНачала)/86400;
	КонецЕсли;
	ПроверкаОформления();
КонецПроцедуры

#КонецОбласти
#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура АнализГрафика(Команда)
	Адрес = АнализГрафикаНаСервере();
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("Адрес", Адрес);
	ОткрытьФорму("Документ.ВКМ_ГрафикОтпусков.Форма.АнализГрафика", СтруктураПараметров, ЭтотОбъект);
КонецПроцедуры
#КонецОбласти
#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ПроверкаОформления()
	
	МассивСотрудников = Новый Массив;
	Данные = Новый ТаблицаЗначений();
	Данные = Объект.ОтпускаСотрудников.Выгрузить();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Список", Данные);	
	Запрос.Текст = "ВЫБРАТЬ
	|	Список.Сотрудник КАК Сотрудник,
	|	Список.ДатаНачала КАК ДатаНачала,
	|	Список.ДатаОкончания КАК ДатаОкончания,
	|	Список.ДнейОтпуска КАК ДнейОтпуска,
	|	Список.Более28Дней КАК Более28Дней
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	&Список КАК Список
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Данные.Сотрудник КАК Сотрудник,
	|	СУММА(ВТ_Данные.ДнейОтпуска) КАК ДнейОтпуска
	|ИЗ
	|	ВТ_Данные КАК ВТ_Данные
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные.Сотрудник
	|ИМЕЮЩИЕ
	|	СУММА(ВТ_Данные.ДнейОтпуска) > 28";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МассивСотрудников.Добавить(Выборка.Сотрудник);
	КонецЦикла;
	
	Для Каждого Строка Из Объект.ОтпускаСотрудников Цикл
		Если МассивСотрудников.Количество() > 0 Тогда
			Для Каждого Элемент Из МассивСотрудников Цикл
				Если Строка.Сотрудник = Элемент Тогда
					Строка.Более28Дней = Истина;
				Иначе 
					Строка.Более28Дней = Ложь;
				КонецЕсли;
			КонецЦикла;
		Иначе
			Строка.Более28Дней = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
&НаСервере
Функция АнализГрафикаНаСервере()
	Данные = Новый ТаблицаЗначений();
	Данные = Объект.ОтпускаСотрудников.Выгрузить();
	Адрес = ПоместитьВоВременноеХранилище(Данные);
	Возврат Адрес;
КонецФункции
#КонецОбласти
