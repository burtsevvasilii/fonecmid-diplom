
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ОбработкаЗаказов.Записывать = Истина;
	Движения.ОстаткиТоваров.Записывать = Истина;
	Движения.ВКМ_ВыставленныеКОплатеРаботы.Записывать = Истина;
	
	Движение = Движения.ОбработкаЗаказов.Добавить();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Договор = Договор;
	Движение.Заказ = Основание;
	Движение.СуммаОтгрузки = СуммаДокумента;

	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	Если Договор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		Движение = Движения.ВКМ_ВыставленныеКОплатеРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Клиент = Контрагент;
		Движение.Договор = Договор;
		Движение.Номенклатура = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
		Движение.Сумма = Услуги.Итог("Сумма");
	КонецЕсли;

КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПокупателя.Организация КАК Организация,
	               |	ЗаказПокупателя.Контрагент КАК Контрагент,
	               |	ЗаказПокупателя.Договор КАК Договор,
	               |	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
	               |	ЗаказПокупателя.Товары.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Товары,
	               |	ЗаказПокупателя.Услуги.(
	               |		Ссылка КАК Ссылка,
	               |		НомерСтроки КАК НомерСтроки,
	               |		Номенклатура КАК Номенклатура,
	               |		Количество КАК Количество,
	               |		Цена КАК Цена,
	               |		Сумма КАК Сумма
	               |	) КАК Услуги
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	
	ТоварыОснования = Выборка.Товары.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
	КонецЦикла;
	
	УслугиОснования = Выборка.Услуги.Выбрать();
	Пока ТоварыОснования.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
	КонецЦикла;
	
	Основание = ДанныеЗаполнения;
	
КонецПроцедуры

Процедура ВыполнитьАвтозаполнение() Экспорт
	
	НоменклатураАбонентскаяПлата = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
	НоменклатураРаботыСпециалиста = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
	Если Не ЗначениеЗаполнено(НоменклатураАбонентскаяПлата) И Не ЗначениеЗаполнено(НоменклатураРаботыСпециалиста) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Не заполнены значения Абоненской платы или Работы специалиста";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	Товары.Очистить();
	Услуги.Очистить();
	
	ЗапросДокумент = Новый Запрос;
	ЗапросДокумент.Текст = "ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Договор.ВКМ_СуммаАбонентскойПлаты КАК СуммаАбонентскойПлаты
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &Ссылка
	|	И РеализацияТоваровУслуг.Договор.ВКМ_СуммаАбонентскойПлаты > 0";
	
	ЗапросДокумент.УстановитьПараметр("Ссылка", Ссылка);
	ВыборкаДокумент = ЗапросДокумент.Выполнить().Выбрать();
	
	Если ВыборкаДокумент.Следующий() Тогда
		НоваяСтрокаТовары = Товары.Добавить();
		НоваяСтрокаТовары.Номенклатура = НоменклатураАбонентскаяПлата;
		НоваяСтрокаТовары.Количество = 1;
		НоваяСтрокаТовары.Цена = ВыборкаДокумент.СуммаАбонентскойПлаты;
		НоваяСтрокаТовары.Сумма = НоваяСтрокаТовары.Цена * НоваяСтрокаТовары.Количество; 
	КонецЕсли;
	
	ЗапросРегистр = Новый Запрос;
	ЗапросРегистр.Текст = "ВЫБРАТЬ
	|	ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот КАК КоличествоЧасов,
	|	ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот КАК СуммаКОплате
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&НачалоПериода, &КонецПериода,, Договор = &Договор) КАК
	|		ВКМ_ВыполненныеКлиентуРаботыОбороты";
	ЗапросРегистр.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	ЗапросРегистр.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));		
	ЗапросРегистр.УстановитьПараметр("Договор", Договор);	
	ВыборкаРегистр = ЗапросРегистр.Выполнить().Выбрать();
	
	Если ВыборкаРегистр.Следующий() Тогда
		НоваяСтрокаУслуги = Услуги.Добавить();
		НоваяСтрокаУслуги.Номенклатура = НоменклатураРаботыСпециалиста;
		НоваяСтрокаУслуги.Количество = ВыборкаРегистр.КоличествоЧасов;
		НоваяСтрокаУслуги.Сумма = ВыборкаРегистр.СуммаКОплате;
		НоваяСтрокаУслуги.Цена = НоваяСтрокаУслуги.Сумма / НоваяСтрокаУслуги.Количество;
	КонецЕсли; 	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
